openapi: 3.0.0
info:
  title: ServiceCalendar
  version: 1.0.0
  description: Events
tags:
- name: event
  description: Event actions
- name: user
  description: Account management
paths:
  /events:
      get:
        tags:
          - event
        summary: Find all the events
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Event'
          '404':
            description: Not Found
      post:
        security:
          - bearerAuth: []
        tags:
          - event
        summary: Add event
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventWithNoId'
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Event'
          '400':
            description: Bad Request
          '401':
            description: Invalid token
      put:
        security:
          - bearerAuth: []
        tags:
          - event
        summary: Update event
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        responses:
          '201':
            description: Update
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Event'
          '400':
            description: Bad Request
  /events/{eventId}:
    delete:
      security:
        - bearerAuth: []
      tags:
        - event
      summary: Delete event
      parameters:
      - name: eventId
        in: path
        description: The id of the event to be deleted
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Deleted successfully
        '400':
          description: Bad Request
    get:
      tags:
      - event
      summary: Gets event by id
      parameters:
      - name: eventId
        in: path
        description: The id of event
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Bad Request
  /events/connectedEvents:
    get:
      security:
        - bearerAuth: []
      tags:
        - event
      summary: Find all events which connected to user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '401':
          description: Not Found
  /user:
    post:
      tags:
      - user
      summary: Register
      requestBody:
        description: Account of user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '201':
          description: Sucessfully registered
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
  /user/login:
    get:
      tags:
      - user
      summary: Login user
      parameters:
      - name: username
        in: query
        description: Name of user to login
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: Password of user to login
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
  /user/logout:
    get:
      tags:
      - user
      security:
      - bearerAuth: []
      summary: LogOut user
      responses:
        '200':
          description: OK
  /user/{username}:
    get:
      tags:
      - user
      summary: Get a user by username
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 
  schemas:
    Event:
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        date:
          type: string
          format: date
        description:
          type: string
        createdUserName:
          type: string
        connectedUsers:
          type: array
          items:
            type: string
      required:
        - organizerId
        - name
        - date
    EventWithNoId:
      properties:
        name:
          type: string
        description:
          type: string
        date:
          type: string
          format: date
        organizerId:
          type: integer
          format: int64
        connectedUsers:
          type: array
          items:
            type: string
      required:
        - name
        - date
        - organizerId
    User:
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        connectedEvents:
          type: array
          items:
            $ref: '#/components/schemas/Event'
      required:
        - username
    UserRegistration:
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - username
        - password